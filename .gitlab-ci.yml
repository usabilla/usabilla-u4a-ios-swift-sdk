stages:
  - install
  - lint
  - checkXcode
  - run-unit-test
  - buildAll-and-GenerateArtefacts
  - validate-framework
  - validation
  - ui-test
  - system-test
  - deploy
  - release
  - release-build-xamarin
  - release-build-cs

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"

before_script:
  - cat .gitlabmodules > .gitmodules
  - git submodule sync --recursive
  - git submodule update --init --recursive 

install:
  stage: install
  script:
    - bundle install
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - vendor/
  tags:
    - sdk

lint:
  stage: lint
  script:
    - bundle exec fastlane lint
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
  artifacts:
    paths:
      - fastlane/swiftlint.html
  tags:
    - sdk
  allow_failure: false

checkXcode:
  stage: checkXcode
  script:
    - bundle exec fastlane checkXcode
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
  tags:
    - sdk
  allow_failure: false

run-unit-test:
  stage: run-unit-test
  script:
    - bundle exec fastlane runUnitTests
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
  tags:
    - sdk
  allow_failure: true

build:
  stage: buildAll-and-GenerateArtefacts
  script:
    - bundle exec fastlane buildAllAndGenerateArtefacts
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^(release|develop|hotfix).*$/
    - master

validate-framework:
  stage: validate-framework
  script:
    - bundle exec fastlane validateFrameWork
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^(release|develop|hotfix).*$/
    - master

validation:
  stage: validation
  script:
    - bundle exec fastlane validateAll
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^(release|develop|hotfix).*$/
    - master

ui-test:
  stage: ui-test
  script:
    - bundle exec fastlane uiTest
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  except:
    - /task.*$/
  allow_failure: true

system-test:
  stage: system-test
  script:
    - bundle exec fastlane systemTests
  dependencies: []
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^(release|develop|hotfix).*$/
    - master

trigger-test-app:
  stage: deploy
  script:
    - echo "Build internal testing app"
    - >
      curl -X POST
      -F token=$TOKEN_TRIGGER_INTERNAL_TEST_APP
      -F ref=develop
      -F "variables[SDK_PIPELINE_ID]=$CI_PIPELINE_IID"
      -F "variables[SDK_BRANCH]=$CI_COMMIT_REF_NAME"
      https://gitlab.usabilla.net/api/v4/projects/146/trigger/pipeline
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  except:
    - master
  
trigger-preview-app:
  stage: deploy
  script:
    - echo "Build Preview App"
    - >
      curl -X POST
      -F token=$TOKEN_TRIGGER_PREVIEW_APP
      -F ref=develop
      -F "variables[SDK_PIPELINE_ID]=$CI_PIPELINE_IID"
      -F "variables[SDK_BRANCH]=$CI_COMMIT_REF_NAME"
      https://gitlab.usabilla.net/api/v4/projects/142/trigger/pipeline
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^(develop|hotfix|release).*$/
    
trigger-lifecycle-app:
  stage: deploy
  script:
    - echo "Build Lifecycle App"
    - >
      curl -X POST
      -F token=$TOKEN_TRIGGER_LIFECYCLE_APP
      -F ref=main
      -F "variables[SDK_PIPELINE_ID]=$CI_PIPELINE_IID"
      -F "variables[SDK_BRANCH]=$CI_COMMIT_REF_NAME"
      -F "variables[SDK_FILENAME]=XcodeBuilds/master/UsabillaXCFramework.zip"
      -F "variables[SDK_JOB_ID]=${CI_JOB_ID}"
      https://gitlab.usabilla.net/api/v4/projects/320/trigger/pipeline
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  artifacts:
    paths:
    - ./XcodeBuilds/master/UsabillaXCFramework.zip
  tags:
    - sdk
  only:
    - /^release\/v[0-9]+\.[0-9]+\.[0-9]+.*/

create-release-versions:
  stage: release
  script:
    - bundle exec fastlane createDraftRelease
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^release\/v[0-9]+\.[0-9]+\.[0-9]+.*/
  when: manual

create-release-build-xamarin:
  stage: release-build-xamarin
  script:
    - bundle exec fastlane buildXamarinAndGenerateArtefacts
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  tags:
    - sdk
  only:
    - /^release\/v[0-9]+\.[0-9]+\.[0-9]+.*/
  when: manual

create-release-build-cs:
  stage: release-build-cs
  script:
    - echo "Upload artifacts and Build Unity"
    - bundle exec fastlane buildUnityXamarinXCFramework 
  cache:
    key: sdk-cache
    paths:
    - Carthage/
    - vendor/
    - derivedData/
    - XcodeBuilds/
  artifacts:
    paths:
    - ./XcodeBuilds/master/UsabillaCSXCFramework.zip
  tags:
    - sdk
  only:
    - /^release\/v[0-9]+\.[0-9]+\.[0-9]+.*/
    - /^release\/unity*/
  when: manual
